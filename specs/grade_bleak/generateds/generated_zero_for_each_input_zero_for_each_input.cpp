TEST(BleakVirtualMachine, zero_for_each_input_zero_for_each_input) {
  BleakVirtualMachine vm("cases/zero_for_each_input.bleak", "cases/zero_for_each_input.in");
  for (int reset = 0; reset < 5; ++reset) {
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(345, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(345, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(345, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4565, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4565, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4565, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(43, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(43, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(43, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(534, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(534, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(534, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(13, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(13, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(13, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(14, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(45645, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(14, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(45645, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(14, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(45645, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(634, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(634, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(634, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(16, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5345, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(16, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5345, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(16, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5345, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(17, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34543, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(17, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34543, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(17, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34543, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(18, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(534, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(18, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(534, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(18, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(534, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(523, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(523, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(523, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(21, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(23, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(21, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(23, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(21, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(23, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(22, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3445, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(22, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3445, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(22, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3445, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 66 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(23, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(63, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 67 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(23, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(63, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 68 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(23, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(63, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 69 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(24, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(567, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 70 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(24, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(567, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 71 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(24, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(567, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 72 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(25, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5645, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 73 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(25, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5645, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 74 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(25, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5645, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 75 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(26, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34523453, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 76 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(26, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34523453, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 77 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(26, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(34523453, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 78 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(27, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(45, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 79 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(27, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(45, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 80 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(27, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(45, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 81 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(28, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(2454, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 82 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(28, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(2454, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 83 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(28, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(2454, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 84 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(29, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 85 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(29, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 86 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r9 <- read", "output 0", "jmp read", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({100, 200, 3, 7, 12, 234, 345, 3, 4565, 34, 43, 534, 5, 45645, 634, 5345, 34543, 534, 523, 4234, 23, 3445, 63, 567, 5645, 34523453, 45, 2454, 5234, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"read", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(29, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5234, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 87 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    bool saw_exception = false;
    try {
      vm.Step();
    } catch (int actual_exception) {
      saw_exception = true;
      ASSERT_EQ(BleakVirtualMachine::INPUT_OUT_OF_BOUNDS, actual_exception) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 88 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the exception raised on the last call to Step wasn't what I expected.";
    }
    ASSERT_TRUE(saw_exception) << "I tried stepping a virtual machine on source cases/zero_for_each_input.bleak and input cases/zero_for_each_input.in 88 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the last call to Step didn't raise exception INPUT_OUT_OF_BOUNDS as I expected.";
    vm.Reset();
  }
}

