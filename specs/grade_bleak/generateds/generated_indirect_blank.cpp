TEST(BleakVirtualMachine, indirect_blank) {
  BleakVirtualMachine vm("cases/indirect.bleak", "cases/blank.in");
  for (int reset = 0; reset < 5; ++reset) {
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r0 9", "store [r0] 10 <- fill", "dec r0", "jpos r0 fill", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"fill", 1}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    bool saw_exception = false;
    try {
      vm.Step();
    } catch (int actual_exception) {
      saw_exception = true;
      ASSERT_EQ(BleakVirtualMachine::INSTRUCTION_OUT_OF_BOUNDS, actual_exception) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the exception raised on the last call to Step wasn't what I expected.";
    }
    ASSERT_TRUE(saw_exception) << "I tried stepping a virtual machine on source cases/indirect.bleak and input cases/blank.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the last call to Step didn't raise exception INSTRUCTION_OUT_OF_BOUNDS as I expected.";
    vm.Reset();
  }
}

