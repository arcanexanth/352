TEST(BleakVirtualMachine, arithmetic_blank) {
  BleakVirtualMachine vm("cases/arithmetic.bleak", "cases/blank.in");
  for (int reset = 0; reset < 5; ++reset) {
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(8, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(9, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(90, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(10, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(20, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(90, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(11, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(30, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(90, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(12, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(40, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(90, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(13, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(90, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(14, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(91, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(15, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(92, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(16, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(93, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(17, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(94, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(18, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(95, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(19, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(96, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(20, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(97, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(21, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(98, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(22, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(99, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(23, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(98, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"store r1 10 <- start", "store r2 20", "store r3 30", "store r4 40", "store r5 50", "store r6 60", "store r7 70", "store r8 80", "store r9 90", "inc r1", "dec r2", "add r3 r4", "sub r4 r5", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "inc r9", "dec r9", "output r7", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetInput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({70, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"start", 0}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(24, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(11, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(19, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(-10, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(50, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(60, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(70, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(80, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(98, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    bool saw_exception = false;
    try {
      vm.Step();
    } catch (int actual_exception) {
      saw_exception = true;
      ASSERT_EQ(BleakVirtualMachine::INSTRUCTION_OUT_OF_BOUNDS, actual_exception) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the exception raised on the last call to Step wasn't what I expected.";
    }
    ASSERT_TRUE(saw_exception) << "I tried stepping a virtual machine on source cases/arithmetic.bleak and input cases/blank.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the last call to Step didn't raise exception INSTRUCTION_OUT_OF_BOUNDS as I expected.";
    vm.Reset();
  }
}

