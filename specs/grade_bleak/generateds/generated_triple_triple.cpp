TEST(BleakVirtualMachine, triple_triple) {
  BleakVirtualMachine vm("cases/triple.bleak", "cases/triple.in");
  for (int reset = 0; reset < 5; ++reset) {
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 0 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 1 step, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 2 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 3 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 4 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 5 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({}), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 6 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 7 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(1, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 8 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 9 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 10 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 11 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 12 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 13 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 14 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 15 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 16 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 17 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 18 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 19 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 20 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 21 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 22 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 23 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(3, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 24 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 25 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(9, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 26 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 27 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 28 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 29 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 30 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 31 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(4, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 32 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 33 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(12, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 34 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 35 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(10, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 36 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 37 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 38 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 39 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(5, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 40 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 41 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(15, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 42 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 43 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 44 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(300, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 45 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(300, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 46 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(300, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 47 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(6, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(100, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(300, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 48 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(300, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 49 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(300, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 50 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 51 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(400, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 52 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(600, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 53 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(600, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 54 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(600, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 55 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(7, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(200, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(600, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 56 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(1, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(600, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 57 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(4, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(600, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 58 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(5, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 59 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(6, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(396, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 60 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(7, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(594, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 61 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(2, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(594, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 62 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, 594, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(3, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(594, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 63 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    vm.Step();
    ASSERT_EQ(vector<string>({"input r0 <- grab", "call triple", "output r9", "jmp grab", "store r9 r0 <- triple", "add r9 r0", "add r9 r0", "return", }), vm.GetInstructions()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInstructions didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({1, 2, 3, 4, 5, 100, 200, 198, }), vm.GetInput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetInput didn't give back the list I expected.";
    ASSERT_EQ(vector<int>({3, 6, 9, 12, 15, 300, 600, 594, }), vm.GetOutput()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetOutput didn't give back the list I expected.";
    {
      map<string, int> expected_labels = {{"grab", 0}, {"triple", 4}, };
      ASSERT_EQ(expected_labels, vm.GetLabels()) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but GetLabels didn't give back the map I expected.";
    }
    ASSERT_EQ(0, vm.GetRegisters().find("pc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register pc wasn't what I expected it to be.";
    ASSERT_EQ(8, vm.GetRegisters().find("nc")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register nc wasn't what I expected it to be.";
    ASSERT_EQ(2, vm.GetRegisters().find("ra")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register ra wasn't what I expected it to be.";
    ASSERT_EQ(198, vm.GetRegisters().find("r0")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r0 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r1")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r1 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r2")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r2 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r3")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r3 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r4")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r4 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r5")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r5 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r6")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r6 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r7")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r7 wasn't what I expected it to be.";
    ASSERT_EQ(0, vm.GetRegisters().find("r8")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r8 wasn't what I expected it to be.";
    ASSERT_EQ(594, vm.GetRegisters().find("r9")->second) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 64 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but register r9 wasn't what I expected it to be.";
    bool saw_exception = false;
    try {
      vm.Step();
    } catch (int actual_exception) {
      saw_exception = true;
      ASSERT_EQ(BleakVirtualMachine::INPUT_OUT_OF_BOUNDS, actual_exception) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the exception raised on the last call to Step wasn't what I expected.";
    }
    ASSERT_TRUE(saw_exception) << "I tried stepping a virtual machine on source cases/triple.bleak and input cases/triple.in 65 steps, having reset " << reset << " time" << (reset == 1 ? "" : "s") << ", but the last call to Step didn't raise exception INPUT_OUT_OF_BOUNDS as I expected.";
    vm.Reset();
  }
}

